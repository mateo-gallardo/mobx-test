/**
 * Sample React Native App
 * https://github.com/facebook/react-native
 * @flow
 */

import React, { Component } from 'react';
import {
  AppRegistry,
  StyleSheet,
  Text,
  View,
  Alert,
  Button,
  DeviceEventEmitter
} from 'react-native';
import {NotificationsAndroid} from 'react-native-notifications';

NotificationsAndroid.setRegistrationTokenUpdateListener((deviceToken) => {
  console.log('Push-notifications registered!', deviceToken);

  Alert.alert(
    'Alert Title',
    'token: ' + deviceToken,
    [
      {text: 'OK', onPress: () => console.log('OK Pressed')},
    ],
    { cancelable: false }
  )
});

//Metodos de la libreria, pueden llegar a servir
/*NotificationsAndroid.setNotificationReceivedListener((notification) => {
  console.log("Notification received on device", notification.getData());
  Alert.alert(
    'Alert Title',
    JSON.stringify(notification.getData()),
    [
      {text: 'OK', onPress: () => console.log('OK Pressed')},
    ],
    { cancelable: false }
  )
});


NotificationsAndroid.setNotificationOpenedListener((notification) => {
  console.log("Notification opened by device user", notification.getData());
  Alert.alert(
    'Alert Title',
    JSON.stringify(notification.getData()),
    [
      {text: 'OK', onPress: () => console.log('OK Pressed')},
    ],
    { cancelable: false }
  )
});*/

/* --- NOTIFICATION ACTION LISTENER --- */
let notificationActionListener = DeviceEventEmitter.addListener("notificationAction", (notification) => {
  Alert.alert(
    'Order accepted',
    'The order for',
    [
      {text: 'OK', onPress: () => console.log('OK Pressed')},
    ],
    { cancelable: false }
  );
  /*console.log(notification);
  let gcmNotification = notification.data.notification && notification.data.notification.data || notification.data['gcm.notification.data'];
  let notificationData = JSON.parse(gcmNotification);

  let actions = {
    acceptOrder: function (notification) {
      Alert.alert(
        'Order accepted',
        'The order for ' + notificationData.amount + ' ' + notificationData.unit + ' of ' + notificationData.product + ' has been accepted.',
        [
          {text: 'OK', onPress: () => console.log('OK Pressed')},
        ],
        { cancelable: false }
      )
    },
    cancelOrder: function (notification) {
      Alert.alert(
        'Order canceled',
        'The order for ' + notificationData.amount + ' ' + notificationData.unit + ' of ' + notificationData.product + ' has been canceled.',
        [
          {text: 'OK', onPress: () => console.log('OK Pressed')},
        ],
        { cancelable: false }
      )
    }
  };

  actions[notification.callback]();*/
});

export default class MobxTest extends Component {

  localNotification() {
    NotificationsAndroid.localNotification({
      title: "Local notification",
      body: "This notification was generated by the app!",
      extra: "data"
    });
  }

  render() {
    return (
      <View style={styles.container}>
        <Text style={styles.welcome}>
          Ah re loco!
        </Text>
        <Text style={styles.instructions}>
          To get started, edit index.android.js
        </Text>
        <Text style={styles.instructions}>
          Double tap R on your keyboard to reload,{'\n'}
          Shake or press menu button for dev menu
        </Text>
        <Button
          onPress={this.localNotification}
          title="Notification"
          color="#841584"
          accessibilityLabel="Learn more about this purple button"
        />
      </View>
    );
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#F5FCFF',
  },
  welcome: {
    fontSize: 20,
    textAlign: 'center',
    margin: 10,
  },
  instructions: {
    textAlign: 'center',
    color: '#333333',
    marginBottom: 5,
  },
});

AppRegistry.registerComponent('MobxTest', () => MobxTest);
